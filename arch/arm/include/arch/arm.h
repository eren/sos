/*
Copyright (C) 2013  Eren TÃ¼rkay <turkay.eren@gmail.com>

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
02110-1301, USA.
*/

#include <sys/types.h>

/*
 * Mode mask flags for SPSR. The MODE_MASK is used to extract the mode
 * field in SPSR, and discard other fields.
 */
#define MODE_MASK 0x1f
#define MODE_USR 0x10
#define MODE_FIQ 0x11
#define MODE_IRQ 0x12
#define MODE_SVC 0x13
#define MODE_MON 0x16
#define MODE_ABT 0x17
#define MODE_UND 0x1b
#define MODE_SYS 0x1f

/*
 * This frame is generated by exceptions.S for unrecoverable errors. See
 * arm_{undefined, syscall, prefetch_abort, data_abort} functions for
 * how the stack is created. This frame pointer is, then, passed to
 * higher level C routine for further processing.
 */
struct arm_fault_frame {
	uint32_t spsr;   /* program status register */
	uint32_t usp;    /* user stack pointer */
	uint32_t ulr;    /* user link register */
	uint32_t r[13];  /* general purpose registers from r0 to r12 */
	uint32_t pc;     /* program counter when the exception occurs */
};

/* used by arm_save_mod_regs to hold banked registers for each mode. */
struct arm_mode_regs {
	uint32_t fiq_r13, fiq_r14;
	uint32_t irq_r13, irq_r14;
	uint32_t svc_r13, svc_r14;
	uint32_t abt_r13, abt_r14;
	uint32_t und_r13, und_r14;
	uint32_t sys_r13, sys_r14;
};

/* assembly function, defined in asm.S */
void arm_save_mode_regs(struct arm_mode_regs *regs);
